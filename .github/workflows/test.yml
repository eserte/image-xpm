name: CI

on:
  push:
    branches-ignore:
      - '*travis*'
      - '*appveyor*'
      - '*doozer*'
  pull_request:
  workflow_dispatch:

jobs:
  test_on_host:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
     matrix:
       os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - name: apt hacks
      # the already installed libgd3 conflicts with libgd-dev to be installed
      # also, /etc/apt/sources.list should be sufficient; all the other repositories are possibly problematic
      run: |
        sudo rm -f /etc/apt/sources.list.d/*.list
        sudo apt-get update -qq
        sudo apt-get remove -y libgd3 nginx
      if: "startsWith(matrix.os, 'ubuntu-')"

    - uses: taiki-e/checkout-action@v1

    - name: "perl installation (macos)"
      run: |
        brew install cpanminus
        cpanm --quiet --installdeps --notest .
      if: "startsWith(matrix.os, 'macos-')"

    - name: "perl installation (windows)"
      run: |
        if (!(Test-Path -Path "C:\strawberry")) {
          cinst strawberryperl
        }
        cpanm --quiet --installdeps --notest .
      if: "startsWith(matrix.os, 'windows-')"

    - name: "perl installation (ubuntu)"
      run: |
        sudo apt-get install -q --no-install-recommends -y cpanminus
        cpanm --sudo --quiet --installdeps --notest .
      if: "startsWith(matrix.os, 'ubuntu-')"

    - name: "build and test"
      run: |
        perl Makefile.PL
        make all test

  test_in_container:
    name: Test with perl ${{ matrix.perlimage }}
    runs-on: ubuntu-latest
    container: perl:${{ matrix.perlimage }}
    strategy:
      matrix:
        include:
          - perlimage: 5.8.9-threaded-stretch
          - perlimage: 5.10.1-buster
          - perlimage: 5.12.5-stretch
          - perlimage: 5.14.4-stretch
          - perlimage: 5.16.3-buster
          - perlimage: 5.18.4-buster
          - perlimage: 5.22.4-stretch
          - perlimage: 5.40.0-bookworm

    steps:
    - name: apt hacks
      run: |
        set -e
        CODENAME=$(perl -nle '/^VERSION_CODENAME="?([^"]+)/ and $codename=$1; /^VERSION="\d+ \((.*)\)/ and $maybe_codename=$1; END { print $codename || $maybe_codename }' /etc/os-release)
        case "$CODENAME" in
          wheezy|jessie|stretch)
            echo "APT::Get::AllowUnauthenticated 1;" > /etc/apt/apt.conf.d/02allow-unsigned
            echo "deb [check-valid-until=no] http://archive.debian.org/debian $CODENAME main"                   >  /etc/apt/sources.list
            echo "deb [check-valid-until=no] http://archive.debian.org/debian-security/ $CODENAME/updates main" >> /etc/apt/sources.list
            ;;
        esac
    - uses: taiki-e/checkout-action@v1
    - name: "build and test"
      run: |
        cpanm --quiet --installdeps --notest .
        perl Makefile.PL
        make all test
